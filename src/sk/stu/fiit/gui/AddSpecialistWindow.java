/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sk.stu.fiit.inputs.InputSanitizer;
import sk.stu.fiit.specialists.Administrator;
import sk.stu.fiit.specialists.Consultant;
import sk.stu.fiit.specialists.Programmer;

/**
 *
 * @author PeterSmrecek
 */
public class AddSpecialistWindow extends javax.swing.JFrame {

    /**
     * Creates new form AddSpecialistWindow
     */
    
    Main_window main_window;
            
    public AddSpecialistWindow(Main_window main_window) {
        initComponents();
        
        this.main_window = main_window;
        
        platformLbl.setVisible(false);
        platformTf.setVisible(false);        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        typeBg = new javax.swing.ButtonGroup();
        addSpecialistPnl = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        mdLbl = new javax.swing.JLabel();
        practiseLbl = new javax.swing.JLabel();
        educationLbl = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();
        mdTf = new javax.swing.JTextField();
        practiseTf = new javax.swing.JTextField();
        educationTf = new javax.swing.JTextField();
        atributesCb = new javax.swing.JComboBox<>();
        programmerRb = new javax.swing.JRadioButton();
        consultantRb = new javax.swing.JRadioButton();
        administratorRb = new javax.swing.JRadioButton();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        platformLbl = new javax.swing.JLabel();
        platformTf = new javax.swing.JTextField();
        atributesLb = new javax.swing.JLabel();
        certPnl = new javax.swing.JPanel();
        certScr = new javax.swing.JScrollPane();
        certTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Evidencia špecialistu");
        setLocationByPlatform(true);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        addSpecialistPnl.setLayout(jPanel1Layout);

        titleLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("Evidencia špecialistu");
        titleLbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLbl.setPreferredSize(new java.awt.Dimension(450, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        addSpecialistPnl.add(titleLbl, gridBagConstraints);

        nameLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameLbl.setText("Meno");
        nameLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        nameLbl.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        addSpecialistPnl.add(nameLbl, gridBagConstraints);

        mdLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mdLbl.setText("Cena za deň");
        mdLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        mdLbl.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        addSpecialistPnl.add(mdLbl, gridBagConstraints);

        practiseLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        practiseLbl.setText("Dĺžka praxe");
        practiseLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        practiseLbl.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        addSpecialistPnl.add(practiseLbl, gridBagConstraints);

        educationLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        educationLbl.setText("Najvyššie dosiahnuté vzdelanie");
        educationLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        educationLbl.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        addSpecialistPnl.add(educationLbl, gridBagConstraints);

        nameTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        addSpecialistPnl.add(nameTf, gridBagConstraints);

        mdTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mdTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        addSpecialistPnl.add(mdTf, gridBagConstraints);

        practiseTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        practiseTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        addSpecialistPnl.add(practiseTf, gridBagConstraints);

        educationTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        educationTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        addSpecialistPnl.add(educationTf, gridBagConstraints);

        atributesCb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        atributesCb.setPreferredSize(new java.awt.Dimension(150, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        addSpecialistPnl.add(atributesCb, gridBagConstraints);

        typeBg.add(programmerRb);
        programmerRb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        programmerRb.setText("Programátor");
        programmerRb.setPreferredSize(new java.awt.Dimension(150, 29));
        programmerRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programmerRbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        addSpecialistPnl.add(programmerRb, gridBagConstraints);

        typeBg.add(consultantRb);
        consultantRb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        consultantRb.setText("Bezpečnostný konzultant");
        consultantRb.setPreferredSize(new java.awt.Dimension(150, 29));
        consultantRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultantRbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        addSpecialistPnl.add(consultantRb, gridBagConstraints);

        typeBg.add(administratorRb);
        administratorRb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        administratorRb.setText("Administrátor");
        administratorRb.setPreferredSize(new java.awt.Dimension(150, 29));
        administratorRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorRbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        addSpecialistPnl.add(administratorRb, gridBagConstraints);

        okBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        okBtn.setText("OK");
        okBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                okBtnMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        addSpecialistPnl.add(okBtn, gridBagConstraints);

        cancelBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancelBtn.setText("Zrušiť");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelBtnMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        addSpecialistPnl.add(cancelBtn, gridBagConstraints);

        platformLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        platformLbl.setText("Preferovaná platforma");
        platformLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        addSpecialistPnl.add(platformLbl, gridBagConstraints);

        platformTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        platformTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        addSpecialistPnl.add(platformTf, gridBagConstraints);

        atributesLb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        atributesLb.setText("Vyber typ špecialistu");
        atributesLb.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 8;
        addSpecialistPnl.add(atributesLb, gridBagConstraints);

        certPnl.setMinimumSize(new java.awt.Dimension(300, 120));
        certPnl.setPreferredSize(new java.awt.Dimension(300, 60));
        certPnl.setLayout(new java.awt.GridBagLayout());

        certScr.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        certScr.setMinimumSize(new java.awt.Dimension(270, 120));

        certTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Certifikáty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        certTbl.setMinimumSize(new java.awt.Dimension(150, 60));
        certTbl.getTableHeader().setReorderingAllowed(false);
        certScr.setViewportView(certTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        certPnl.add(certScr, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        addSpecialistPnl.add(certPnl, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addSpecialistPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addSpecialistPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okBtnMouseReleased
        // TODO add your handling code here:
        
        createSpecialist();
    }//GEN-LAST:event_okBtnMouseReleased

    private void cancelBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseReleased

    private void programmerRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programmerRbActionPerformed
        // TODO add your handling code here:
        if (programmerRb.isSelected()) {
            atributesLb.setText("Vyber zaradenie programátora");
            atributesCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Java", "C++", "ABAP", "VBA", "Python", "Ruby", "iOS", "Iné" }));
            platformLbl.setVisible(false);
            platformTf.setVisible(false);
        }
    }//GEN-LAST:event_programmerRbActionPerformed

    private void consultantRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultantRbActionPerformed
        // TODO add your handling code here:
        if (consultantRb.isSelected()) {
            atributesLb.setText("Je audítor kybernetickej bezpečnosti NBU?");
            atributesCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Áno", "Nie"}));
            platformLbl.setVisible(false);
            platformTf.setVisible(false);
        }
    }//GEN-LAST:event_consultantRbActionPerformed

    private void administratorRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorRbActionPerformed
        // TODO add your handling code here:
        if (administratorRb.isSelected()) {
            atributesLb.setText("Vyber zaradenie administrátora");
            atributesCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Aplikačný", "Sieťový", "SAP", "Iné"}));
            platformLbl.setVisible(true);
            platformTf.setVisible(true);
        }
    }//GEN-LAST:event_administratorRbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSpecialistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSpecialistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSpecialistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSpecialistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSpecialistWindow(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addSpecialistPnl;
    private javax.swing.JRadioButton administratorRb;
    private javax.swing.JComboBox<String> atributesCb;
    private javax.swing.JLabel atributesLb;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel certPnl;
    private javax.swing.JScrollPane certScr;
    private javax.swing.JTable certTbl;
    private javax.swing.JRadioButton consultantRb;
    private javax.swing.JLabel educationLbl;
    private javax.swing.JTextField educationTf;
    private javax.swing.JLabel mdLbl;
    private javax.swing.JTextField mdTf;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTf;
    private javax.swing.JButton okBtn;
    private javax.swing.JLabel platformLbl;
    private javax.swing.JTextField platformTf;
    private javax.swing.JLabel practiseLbl;
    private javax.swing.JTextField practiseTf;
    private javax.swing.JRadioButton programmerRb;
    private javax.swing.JLabel titleLbl;
    private javax.swing.ButtonGroup typeBg;
    // End of variables declaration//GEN-END:variables

public ArrayList<String> getCertificates(){
    DefaultTableModel model = (DefaultTableModel) certTbl.getModel();
    ArrayList<String> certificates = new ArrayList<>();
    for (int i = 0; i < model.getRowCount(); i++) {
        String row = "";
        
        if (model.getValueAt(i, 0) != null) {
            row = (String) model.getValueAt(i, 0);
        }
        
        if (!InputSanitizer.emptyString(row)) {
            certificates.add(row);
        }
    }
    return certificates;
}

    private void createSpecialist() {
        String name = nameTf.getText();
        String priceString = mdTf.getText();
        String practise = practiseTf.getText();
        String education = educationTf.getText();
        String platform = platformTf.getText();
        String atribute = "";
        ArrayList<String> certificates = getCertificates();

        if (atributesCb.getSelectedItem() != null) {
            atribute = String.valueOf(atributesCb.getSelectedItem());
        }

        boolean boolBasicInfo = InputSanitizer.emptyString(name) || InputSanitizer.emptyString(priceString) || InputSanitizer.emptyString(practise) || InputSanitizer.emptyString(education) || InputSanitizer.emptyString(atribute);
        boolean boolPlatform = InputSanitizer.emptyString(platform);

        if (boolBasicInfo) {
            JOptionPane.showMessageDialog(rootPane,
                    "Žiadne pole nesmie zostať prázdne",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (administratorRb.isSelected() && boolPlatform) {
            JOptionPane.showMessageDialog(rootPane,
                    "Žiadne pole nesmie zostať prázdne",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double price;
        try {
            priceString = priceString.replace(",", ".");
            price = Double.parseDouble(priceString);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,
                    "Nesprávny formát ceny",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (price < 0.0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Cena nemôže byť záporné číslo!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (certificates.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Pole certifikátov nemôže zostať prázdne!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (programmerRb.isSelected()) {
            Programmer programmer = new Programmer(atribute, name, price, practise, education, certificates);
            main_window.getAgency().addProgrammer(programmer);
            main_window.updateAll();
            this.dispose();
        }

        if (consultantRb.isSelected()) {
            boolean auditor = false;

            if (atribute == "Áno") {
                auditor = true;
            }
            Consultant consultant = new Consultant(auditor, name, price, practise, education, certificates);
            main_window.getAgency().addConsultant(consultant);
            main_window.updateAll();
            this.dispose();
        }

        if (administratorRb.isSelected()) {
            Administrator administrator = new Administrator(atribute, platform, name, price, practise, education, certificates);
            main_window.getAgency().addAdministrator(administrator);
            main_window.updateAll();
            this.dispose();
        }
    }

}
