/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sk.stu.fiit.inputs.InputSanitizer;
import sk.stu.fiit.agency.Employer;
import sk.stu.fiit.agency.Hire;
import sk.stu.fiit.specialists.Specialist;

/**
 *
 * @author PeterSmrecek
 */
public class EditHireWindow extends javax.swing.JFrame {

    /**
     * Creates new form EditHireWindow
     */
    
    private Main_window main_window;
    private Hire hire;
    
    private ArrayList<Specialist> listSpec;
    private ArrayList<Specialist> listRemoved = new ArrayList<>();
    
    public EditHireWindow(Main_window main_window, Hire hire) {
        initComponents();
        this.main_window = main_window;
        this.hire = hire;
        this.listSpec = hire.getSpecialists();
        
        nameTf.setText(hire.getEmployer().getName());
        numberTf.setText(String.valueOf(hire.getNumberOfHired()));
        dateTf.setText(hire.getDateString());
        populateTableSpec();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        editHirePnl = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        numberLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        specialistsScroll = new javax.swing.JScrollPane();
        specialistsTbl = new javax.swing.JTable();
        nameTf = new javax.swing.JTextField();
        numberTf = new javax.swing.JTextField();
        dateTf = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        canceBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Úprava prenájmu");
        setLocationByPlatform(true);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        editHirePnl.setLayout(jPanel1Layout);

        titleLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("Úprava prenájmu");
        titleLbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLbl.setPreferredSize(new java.awt.Dimension(300, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        editHirePnl.add(titleLbl, gridBagConstraints);

        nameLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameLbl.setText("Názov zamestávateľa");
        nameLbl.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        editHirePnl.add(nameLbl, gridBagConstraints);

        numberLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberLbl.setText("Počet zamestnancov v tomto prenájme");
        numberLbl.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        editHirePnl.add(numberLbl, gridBagConstraints);

        dateLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateLbl.setText("Dátum poslednej úpravy prenájmu");
        dateLbl.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        editHirePnl.add(dateLbl, gridBagConstraints);

        specialistsScroll.setMinimumSize(new java.awt.Dimension(300, 150));
        specialistsScroll.setPreferredSize(new java.awt.Dimension(427, 200));

        specialistsTbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        specialistsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Typ špecialistu", "Cena za deň", "Dĺžka praxe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        specialistsTbl.setMinimumSize(new java.awt.Dimension(300, 150));
        specialistsTbl.getTableHeader().setReorderingAllowed(false);
        specialistsScroll.setViewportView(specialistsTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        editHirePnl.add(specialistsScroll, gridBagConstraints);

        nameTf.setEditable(false);
        nameTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        editHirePnl.add(nameTf, gridBagConstraints);

        numberTf.setEditable(false);
        numberTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        editHirePnl.add(numberTf, gridBagConstraints);

        dateTf.setEditable(false);
        dateTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        editHirePnl.add(dateTf, gridBagConstraints);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        saveBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveBtn.setText("Uložiť");
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveBtnMouseReleased(evt);
            }
        });
        jPanel2.add(saveBtn);

        canceBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        canceBtn.setText("Zrušiť");
        canceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                canceBtnMouseReleased(evt);
            }
        });
        jPanel2.add(canceBtn);

        removeBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        removeBtn.setText("Odobrať vybraného zamestnanca");
        removeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeBtnMouseReleased(evt);
            }
        });
        jPanel2.add(removeBtn);

        deleteBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteBtn.setText("Vymazať celý prenájom");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                deleteBtnMouseReleased(evt);
            }
        });
        jPanel2.add(deleteBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        editHirePnl.add(jPanel2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editHirePnl, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editHirePnl, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseReleased
        // TODO add your handling code here:
        
        saveChanges();
    }//GEN-LAST:event_saveBtnMouseReleased

    private void canceBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceBtnMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_canceBtnMouseReleased

    private void removeBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBtnMouseReleased
        // TODO add your handling code here:
        
        removeSelected();
    }//GEN-LAST:event_removeBtnMouseReleased

    private void deleteBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseReleased
        // TODO add your handling code here:
        
        deleteAll();
    }//GEN-LAST:event_deleteBtnMouseReleased

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EditHireWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EditHireWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EditHireWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EditHireWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditHireWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canceBtn;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JTextField dateTf;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel editHirePnl;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTf;
    private javax.swing.JLabel numberLbl;
    private javax.swing.JTextField numberTf;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JScrollPane specialistsScroll;
    private javax.swing.JTable specialistsTbl;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables


    
    public void deleteRows(DefaultTableModel model) {
        if (model.getRowCount() > 0) {
            for (int i = model.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
    }

    private void populateTableSpec() {
        DefaultTableModel model = (DefaultTableModel) specialistsTbl.getModel();
        deleteRows(model);

        int numberOfColumns = specialistsTbl.getColumnCount();
        Object[] rowData = new Object[numberOfColumns];

        for (int i = 0; i < listSpec.size(); i++) {

            rowData[0] = listSpec.get(i).getBasicInfo().getName();
            rowData[1] = listSpec.get(i).getBasicInfo().getPosition();
            rowData[2] = listSpec.get(i).getBasicInfo().getMan_day().toString();
            rowData[3] = listSpec.get(i).getBasicInfo().getLength_practise();

            model.addRow(rowData);
    }
    }
    
    public int getRow(JTable table, String message) {
        int index = table.getSelectedRow();

        if (InputSanitizer.isPositiveInt(index)) {
            return index;
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    message,
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
        }
        return -1;
    }

    private void deleteAll() {
        listRemoved.addAll(listSpec);
        listSpec.clear();
        
        populateTableSpec();
    }

    private void removeSelected() {
        int specTableIndex = getRow(specialistsTbl, "Nie je vybraný žiaden špecialista z tabuľky!");
        if (specTableIndex == -1) {
            return;
        }
        
        listRemoved.add(listSpec.remove(specTableIndex));
        populateTableSpec();
    }

    private void saveChanges() {
        
        Employer employer = hire.getEmployer();
        employer.removeHire(hire);
        main_window.getAgency().getListHires().remove(hire);
        
        for (Specialist specialistRemoved : listRemoved) {
            specialistRemoved.setHire(null);
            specialistRemoved.setHired(false);
        }
        
        if (!listSpec.isEmpty()) {
            main_window.getAgency().addHire(new Hire(listSpec, employer));
        }
        
        main_window.updateAll();
        this.dispose();

    }
}
